# -*- coding: utf-8 -*-
"""Age_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qtDarZFiQCBSV-oNJ5Edtz_o1b014lsf
"""

!unzip new_age.zip

!pip install scipy==1.1.0

#import imageio
!pip install keras

import pandas as pd
#from scipy.misc import imresize
from skimage.transform import resize 
#from scipy.misc import imread
from imageio import imread
import keras 
import numpy as np

train=pd.read_csv("/content/new_age/train/train.csv")
test=pd.read_csv("/content/new_age/test/test.csv")

train

id=list(train.ID)

temp=[]
for i in id:
  img=imread("/content/new_age/train/Train/"+str(i))
  img=resize(img,(32,32))
  img=img.astype('float32')
  temp.append(img)
train_x=np.stack(temp)

temp=[]
id=list(test.ID)
for i in id:
  img=imread("/content/new_age/test/Test/"+str(i))
  img=resize(img,(32,32))
  img=img.astype('float32')
  temp.append(img)
test_x=np.stack(temp)

train_x=train_x/255. 
test_x=test_x/255.

from sklearn.preprocessing import LabelEncoder

lb = LabelEncoder()
train_y = lb.fit_transform(train.Class)
train_y = keras.utils.np_utils.to_categorical(train_y)

input_num_units = (32, 32, 3)
hidden_num_units = 500
output_num_units = 3

epochs = 5
batch_size = 128

from keras.models import Sequential
from keras.layers import Dense, Flatten, InputLayer

model = Sequential([
  InputLayer(input_shape=input_num_units),
  Flatten(),
  Dense(units=hidden_num_units, activation='relu'),
  Dense(units=output_num_units, activation='softmax'),
])

model.summary()

model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])
model.fit(train_x, train_y, batch_size=batch_size,epochs=epochs,verbose=1)

model.fit(train_x, train_y, batch_size=batch_size,epochs=epochs,verbose=1, validation_split=0.2)

#pred = model.predict_classes(test_x)
#pred = lb.inverse_transform(pred)
#print(pred)
predict_x=model.predict(test_x) 
pred=np.argmax(predict_x,axis=1)
print(pred)
p=lb.inverse_transform(pred)
print(p)
test['Class'] = p
test.to_csv("sub.csv", index=False)

